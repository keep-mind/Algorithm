package sort;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class BasicSort
{
	public void sort(int[] array)
	{
		int max = 0;  // 记录最大的数
		for (int i=0; i<array.length; i++)
		{
			if (max < array[i])
			{
				max = array[i];
			}
		}
		int times = 0; // 获取最大的数的位数
		while (max > 0)
		{
			max /= 10;
			times++;
		}
		// 创建一个二维数组
		List<ArrayList> queue = new ArrayList<>(); // 多维数组
		for (int i=0; i<10; i++)
		{
			ArrayList q = new ArrayList();
			queue.add(q);
		}
		
		for (int i=0; i<times; i++)
		{
			for (int j=0; j<array.length; j++)
			{
				// 获取对应的位的值(i为0是个位，1是十位，依次类推)
				int x = array[j] % (int)Math.pow(10, i+1) / (int)Math.pow(10, i);
				ArrayList q = queue.get(x);
				q.add(array[j]);
//				queue.set(x,  q); // 待定
			}
			// 开始收集
			int count = 0;
			for (int j=0; j<10; j++)
			{
				while (queue.get(j).size()>0)
				{
					ArrayList<Integer> q = queue.get(j); // 拿到每一个数组
					array[count] = q.get(0); // 得到该数组中的第一个元素
					q.remove(0);
					count++;
				}
			}
		}
	}
	
	public static void main(String[] args)
	{
		int [] a = {136,2,6,8,9,2,8,11,23,56,34,90,89,29,145,209,320,78,3};
		BasicSort bs = new BasicSort();
		bs.sort(a);
		System.out.println("排序后：" + Arrays.toString(a));
	}
}
